
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

project.ext {
    buildNum = System.getenv("BUILD_NUMBER")
    mcVersion="1.12"
}

version = project.ext.mcVersion + "-2.1." + project.ext.buildNum
group= "k4unl" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "k4lib"

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "${project.ext.mcVersion}-14.21.1.2387"
    replace "@VERSION@", project.version
    replace "@BUILDNUM@", project.ext.buildNum

    mappings = "snapshot_20170405"

    runDir = "../Minecraft/"
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar {
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        classifier = "deobf"
    }
}


artifacts {
    archives deobfJar
}


task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'K4Lib'
                            developers {
                                developer {
                                    id 'K4Unl'
                                    name 'K4Unl'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
